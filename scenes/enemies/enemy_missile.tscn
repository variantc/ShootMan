[gd_scene load_steps=24 format=3 uid="uid://cfuxvhjeo2lal"]

[ext_resource type="Script" path="res://scripts/enemies/enemy_missile.gd" id="1_sinyk"]
[ext_resource type="Resource" uid="uid://leqihn8b5uic" path="res://resources/instances/enemy_missile_launcher.tres" id="3_ftd20"]
[ext_resource type="AudioStream" uid="uid://6hnj5kdm8shk" path="res://sounds/explosions/explosion (1).wav" id="4_l26rg"]
[ext_resource type="Texture2D" uid="uid://klg20jaj70am" path="res://sprites/EnemyMissile_normal.png" id="5_exjs7"]
[ext_resource type="AudioStream" uid="uid://rw6vkwrnn4jm" path="res://sounds/explosions/explosion (2).wav" id="5_wddie"]
[ext_resource type="AudioStream" uid="uid://b43dqhq60rc1g" path="res://sounds/explosions/explosion (3).wav" id="6_gr7jn"]
[ext_resource type="Texture2D" uid="uid://bjbvj7a0m21qm" path="res://sprites/EnemyMissile_simple.png" id="6_ls171"]
[ext_resource type="AudioStream" uid="uid://dv2ay24mst4c7" path="res://sounds/explosions/explosion (4).wav" id="7_y5kkt"]
[ext_resource type="AudioStream" uid="uid://dbbxvnqc0l2b4" path="res://sounds/explosions/explosion (5).wav" id="8_5c6do"]
[ext_resource type="AudioStream" uid="uid://45ndai6jryhf" path="res://sounds/explosions/explosion (6).wav" id="9_eo1eg"]
[ext_resource type="AudioStream" uid="uid://cwxjmr02t3n7u" path="res://sounds/explosions/explosion (7).wav" id="10_hmekv"]
[ext_resource type="PackedScene" uid="uid://cx2lutrqoqoro" path="res://scenes/components/movement_component.tscn" id="11_v2qla"]
[ext_resource type="Script" path="res://scripts/components/shoot_component.gd" id="13_i5tjw"]
[ext_resource type="PackedScene" uid="uid://b8rvbitfa8jom" path="res://scenes/projectiles/bullet.tscn" id="14_utnfj"]
[ext_resource type="PackedScene" uid="uid://rjpyjelqnsml" path="res://scenes/projectiles/missile.tscn" id="15_ywmck"]

[sub_resource type="CircleShape2D" id="CircleShape2D_gelfa"]
radius = 15.0

[sub_resource type="Shader" id="Shader_7eupo"]
code = "shader_type canvas_item;

#include \"res://shaders/characters.gdshaderinc\"

#define BREATHING_PACE 4.0

// Uniforms
uniform sampler2D burn_gradient;
uniform sampler2D burn_noise;
uniform sampler2D normal_map;
uniform float hp_left : hint_range(0.0, 1.0, 0.05);
uniform float normal_intensity : hint_range(0.0, 1.0) = 1.0;
uniform vec2 light_direction = vec2(0.5, -0.5);
uniform vec3 light_color = vec3(1.0, 1.0, 1.0);
uniform float object_rotation = 0.0; // <--- New uniform for rotation

// Shade effect
uniform vec4 shade_color : source_color = vec4(0.0, 0.0, 0.0, 0.5);
uniform float shade_intensity : hint_range(0.0, 1.0) = 0.5;

vec4 apply_shade(vec4 original_color) {
	if (original_color.a < 0.0001) {
		return vec4(0.0);
	}
	return mix(original_color, shade_color, shade_intensity);
}

// Damage effect
void apply_damage_fragment(inout vec4 c, vec2 uv) {
	float noise_r = texture(burn_noise, uv).r;
	float ty = uv.y + mix(-2.0, 1.0, hp_left) + noise_r;
	vec4 grad_tex = texture(burn_gradient, vec2(uv.y, ty));

	float mix_ratio = clamp(ty, 0.0, 1.0);
	c = vec4(mix(grad_tex, c, mix_ratio).rgb, min(grad_tex.a, c.a));
}

// Damage scaling effect
void apply_damage_vertex(inout vec2 v) {
	float scale = 1.0 + smoothstep(0.7, 1.0, 1.0 - hp_left);
	v *= scale;
}

vec3 apply_normal_map(vec2 uv, vec3 base_color, float rot) {
	// Sample normal map and transform from [0,1] to [-1,1]
	vec3 normal = texture(normal_map, uv).xyz * 2.0 - 1.0;

	// Apply rotation to the normal map
	float cos_angle = cos(rot);
	float sin_angle = sin(rot);
	mat2 rotation_matrix = mat2(
		vec2(cos_angle, -sin_angle),
		vec2(sin_angle, cos_angle)
	);
	normal.xy = rotation_matrix * normal.xy;

	// Normalize light direction (assumed to be in screen space)
	vec3 light_dir = normalize(vec3(light_direction, 1.0));

	// Compute lighting using dot product with normal's Z component for better depth effect
	float light_factor = dot(normal, light_dir);
	light_factor = clamp(light_factor * 0.5 + 0.5, 0.1, 1.0); // Ensure min brightness

	// Blend lighting with base sprite color
	return base_color * (light_color * light_factor);
}

void vertex() {
	apply_damage_vertex(VERTEX);
}

void fragment() {
	// Get base sprite color
	vec4 base_color = texture(TEXTURE, UV);

	// Apply shading effect
	base_color = apply_shade(base_color);

	// Apply damage effect
	apply_damage_fragment(base_color, UV);

	// Apply normal map with rotation
	base_color.rgb = apply_normal_map(UV, base_color.rgb, object_rotation);

	// Set final color
	COLOR = base_color;
}
"

[sub_resource type="Gradient" id="Gradient_3ffsw"]
offsets = PackedFloat32Array(0, 0.0107991, 0.265659, 0.63067)
colors = PackedColorArray(0.6461, 0.364, 0.91, 0, 1, 0.328, 0.04, 1, 0, 0, 0, 1, 0.98, 0.392, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_bmvgt"]
gradient = SubResource("Gradient_3ffsw")
fill_to = Vector2(0, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_fl1rm"]
noise_type = 3
frequency = 0.0067
fractal_octaves = 2

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_rs4ng"]
noise = SubResource("FastNoiseLite_fl1rm")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5bwgc"]
shader = SubResource("Shader_7eupo")
shader_parameter/mix_amount = 0.0
shader_parameter/flash_colour = Color(1, 1, 1, 1)
shader_parameter/hp_left = 1.0
shader_parameter/normal_intensity = 1.0
shader_parameter/light_direction = Vector2(1.5, -0.5)
shader_parameter/light_color = Vector3(1, 1, 1)
shader_parameter/object_rotation = 4.28
shader_parameter/shade_color = Color(0.81, 0.81, 0.81, 1)
shader_parameter/shade_intensity = 0.137
shader_parameter/burn_gradient = SubResource("GradientTexture2D_bmvgt")
shader_parameter/burn_noise = SubResource("NoiseTexture2D_rs4ng")
shader_parameter/normal_map = ExtResource("5_exjs7")

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_yj0ii"]
streams_count = 7
stream_0/stream = ExtResource("4_l26rg")
stream_1/stream = ExtResource("5_wddie")
stream_2/stream = ExtResource("6_gr7jn")
stream_3/stream = ExtResource("7_y5kkt")
stream_4/stream = ExtResource("8_5c6do")
stream_5/stream = ExtResource("9_eo1eg")
stream_6/stream = ExtResource("10_hmekv")

[node name="EnemyMissile" type="CharacterBody2D" groups=["Enemy"]]
visibility_layer = 2
collision_layer = 2
collision_mask = 5
script = ExtResource("1_sinyk")
orbit_speed = 1.0
current_weapon = ExtResource("3_ftd20")
speed = 40.0
ang_acc = 1.0
health = 20.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_gelfa")

[node name="Sprite2D" type="Sprite2D" parent="."]
unique_name_in_owner = true
texture_filter = 1
material = SubResource("ShaderMaterial_5bwgc")
position = Vector2(2, 0)
rotation = 1.5708
texture = ExtResource("6_ls171")

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
offset_top = -2.0
offset_right = 15.0
offset_bottom = 2.0
color = Color(1, 0, 0, 1)

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
unique_name_in_owner = true
stream = SubResource("AudioStreamRandomizer_yj0ii")

[node name="MovementComponent" parent="." instance=ExtResource("11_v2qla")]

[node name="DebugLine" type="Line2D" parent="."]
unique_name_in_owner = true
width = 2.0
default_color = Color(1, 0, 0, 1)

[node name="ShootComponent" type="Node" parent="."]
unique_name_in_owner = true
script = ExtResource("13_i5tjw")
bullet_scene = ExtResource("14_utnfj")
missile_scene = ExtResource("15_ywmck")
